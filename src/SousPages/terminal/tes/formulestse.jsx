import React, { useState } from 'react';

export default function FormulesMethodesTSE() {
  const [activeTab, setActiveTab] = useState({}); // Track active tab for each subject

  const formules = [
    {
      id: 1,
      title: "Math√©matiques - Analyse",
      definition: "Les fonctions, limites, d√©riv√©es et int√©grales adapt√©es au programme Sciences Exp√©rimentales.",
      properties: [
        { name: "Limite d'une fonction", example: "lim(x‚Üía) f(x) = L" },
        { name: "D√©riv√©e d'une fonction", example: "f'(x) = lim(h‚Üí0) [f(x+h) - f(x)]/h" },
        { name: "D√©riv√©e d'un produit", example: "(uv)' = u'v + uv'" },
        { name: "Primitive de base", example: "‚à´ x‚Åø dx = x‚Åø‚Å∫¬π/(n+1) + C" },
        { name: "Int√©grale d√©finie", example: "‚à´[a,b] f(x)dx = F(b) - F(a)" },
        { name: "Fonction exponentielle", example: "d/dx(eÀ£) = eÀ£" }
      ],
      methods: [
        "Identifier le type de fonction et la propri√©t√© √† appliquer.",
        "Pour les limites : factoriser et simplifier les expressions.",
        "Pour les d√©riv√©es : appliquer les r√®gles de base (somme, produit, quotient).",
        "Pour les primitives : reconna√Ætre les formes usuelles.",
        "V√©rifier le r√©sultat par d√©rivation."
      ],
      color: "#3b82f6"
    },
    {
      id: 2,
      title: "Physique - M√©canique",
      definition: "Les lois fondamentales du mouvement et de l'√©nergie en physique exp√©rimentale.",
      properties: [
        { name: "Deuxi√®me loi de Newton", example: "F‚Éó = ma‚Éó" },
        { name: "√ânergie cin√©tique", example: "Ec = ¬Ωmv¬≤" },
        { name: "√ânergie potentielle", example: "Ep = mgh" },
        { name: "Conservation de l'√©nergie", example: "Em = Ec + Ep = constante" },
        { name: "Quantit√© de mouvement", example: "p‚Éó = mv‚Éó" },
        { name: "Travail d'une force", example: "W = F‚Éó ¬∑ d‚Éó = Fd cos(Œ∏)" }
      ],
      methods: [
        "Identifier toutes les forces appliqu√©es au syst√®me.",
        "Choisir un r√©f√©rentiel et d√©finir les axes.",
        "Appliquer la deuxi√®me loi de Newton selon chaque axe.",
        "Utiliser les th√©or√®mes √©nerg√©tiques pour les probl√®mes de conservation.",
        "V√©rifier la coh√©rence des unit√©s et des r√©sultats."
      ],
      color: "#8b5cf6"
    },
    {
      id: 3,
      title: "Physique - √âlectricit√©",
      definition: "Les lois fondamentales des circuits √©lectriques et de l'√©lectromagn√©tisme.",
      properties: [
        { name: "Loi d'Ohm", example: "U = RI" },
        { name: "Puissance √©lectrique", example: "P = UI = RI¬≤ = U¬≤/R" },
        { name: "Loi des mailles", example: "‚àëU = 0" },
        { name: "Loi des n≈ìuds", example: "‚àëI = 0" },
        { name: "√ânergie √©lectrique", example: "W = UIt = Pt" },
        { name: "Capacit√©", example: "Q = CU" }
      ],
      methods: [
        "Analyser le circuit et identifier tous les √©l√©ments.",
        "Appliquer les lois de Kirchhoff (n≈ìuds et mailles).",
        "Utiliser la loi d'Ohm pour chaque r√©sistance.",
        "Calculer les puissances et √©nergies selon le contexte.",
        "V√©rifier que la somme des puissances est coh√©rente."
      ],
      color: "#f59e0b"
    },
    {
      id: 4,
      title: "Chimie - R√©actions",
      definition: "Les r√©actions chimiques, √©quilibres et calculs de concentrations.",
      properties: [
        { name: "√âquilibrage", example: "aA + bB ‚áå cC + dD" },
        { name: "Constante d'√©quilibre", example: "K = [C]·∂ú[D]·µà/[A]·µÉ[B]·µá" },
        { name: "pH", example: "pH = -log[H‚ÇÉO‚Å∫]" },
        { name: "Concentration molaire", example: "C = n/V" },
        { name: "Loi des gaz parfaits", example: "PV = nRT" },
        { name: "Vitesse de r√©action", example: "v = k[A]·µÖ[B]·µù" }
      ],
      methods: [
        "√âquilibrer l'√©quation chimique en respectant la conservation des √©l√©ments.",
        "Identifier les esp√®ces pr√©sentes √† l'√©quilibre.",
        "Calculer les concentrations √† partir des quantit√©s de mati√®re.",
        "Utiliser la constante d'√©quilibre pour d√©terminer l'√©volution.",
        "V√©rifier la coh√©rence avec les conditions exp√©rimentales."
      ],
      color: "#06b6d4"
    },
    {
      id: 5,
      title: "Biologie - G√©n√©tique",
      definition: "Les lois de l'h√©r√©dit√© et les m√©canismes de transmission des caract√®res.",
      properties: [
        { name: "Lois de Mendel", example: "S√©gr√©gation et assortiment ind√©pendant" },
        { name: "Fr√©quence all√©lique", example: "p + q = 1 (pour 2 all√®les)" },
        { name: "Hardy-Weinberg", example: "p¬≤ + 2pq + q¬≤ = 1" },
        { name: "Probabilit√© g√©n√©tique", example: "P(AB) = P(A) √ó P(B)" },
        { name: "Coefficient de consanguinit√©", example: "F = ‚àë(1/2)‚Åø‚Å∫¬π" },
        { name: "Linkage", example: "Fr√©quence de recombinaison < 50%" }
      ],
      methods: [
        "Identifier les all√®les et leur mode de transmission.",
        "√âtablir l'√©chiquier de Punnett pour les croisements simples.",
        "Calculer les probabilit√©s selon les lois de Mendel.",
        "Analyser les √©carts √† l'√©quilibre de Hardy-Weinberg.",
        "Interpr√©ter les r√©sultats en termes de s√©lection ou d√©rive."
      ],
      color: "#10b981"
    },
    {
      id: 6,
      title: "Biologie - Physiologie",
      definition: "Les m√©canismes physiologiques et les r√©gulations biologiques.",
      properties: [
        { name: "Loi de Fick", example: "J = -D(dC/dx)" },
        { name: "√âquation de Nernst", example: "E = E¬∞ + (RT/nF)ln(Cox/Cred)" },
        { name: "D√©bit cardiaque", example: "Qc = VES √ó FC" },
        { name: "Filtration glom√©rulaire", example: "DFG = Kf √ó PNet" },
        { name: "Transport actif", example: "Consommation d'ATP" },
        { name: "Loi d'Ohm biologique", example: "I = ŒîV/R" }
      ],
      methods: [
        "Identifier le processus physiologique √©tudi√©.",
        "Appliquer les lois physiques aux syst√®mes biologiques.",
        "Calculer les flux et gradients selon les conditions.",
        "Analyser les m√©canismes de r√©gulation (feedback).",
        "Interpr√©ter les r√©sultats dans le contexte physiologique."
      ],
      color: "#059669"
    }
  ];

  const handleTabChange = (formuleId, tab) => {
    setActiveTab(prev => ({
      ...prev,
      [formuleId]: tab
    }));
  };

  const getActiveTab = (formuleId) => {
    return activeTab[formuleId] || 'formules';
  };

  return (
    <div style={{ width: '95%', margin: '0 auto', fontFamily: "'Inter', sans-serif", marginTop: '50px' }}>
      <h2 style={{ textAlign: 'center', fontSize: '36px', color: '#1e293b', marginBottom: '50px', fontWeight: '700', letterSpacing: '1px' }}>
        Formules et M√©thodes - Terminale TSE
      </h2>

      <div style={{ display: 'flex', justifyContent: 'space-between', flexWrap: 'wrap', gap: '30px' }}>
        {formules.map((formule) => (
          <div
            key={formule.id}
            style={{
              flex: '1 1 48%',
              minWidth: '350px',
              background: '#fff',
              borderRadius: '25px',
              padding: '0',
              boxShadow: `0 10px 25px rgba(0,0,0,0.08)`,
              borderTop: `6px solid ${formule.color}`,
              transition: 'all 0.4s ease',
              overflow: 'hidden'
            }}
            onMouseEnter={(e) => { 
              e.currentTarget.style.transform = 'translateY(-5px)'; 
              e.currentTarget.style.boxShadow = '0 20px 35px rgba(0,0,0,0.15)'; 
            }}
            onMouseLeave={(e) => { 
              e.currentTarget.style.transform = 'translateY(0)'; 
              e.currentTarget.style.boxShadow = '0 10px 25px rgba(0,0,0,0.08)'; 
            }}
          >
            {/* Header avec titre */}
            <div style={{ padding: '30px 30px 20px 30px' }}>
              <h3 style={{ marginBottom: '15px', fontSize: '22px', fontWeight: '700', color: formule.color }}>
                {formule.title}
              </h3>
              <p style={{ fontSize: '14px', color: '#334155', marginBottom: '0', lineHeight: '1.5' }}>
                {formule.definition}
              </p>
            </div>

            {/* Boutons de navigation */}
            <div style={{ 
              display: 'flex', 
              borderBottom: '1px solid #e2e8f0',
              backgroundColor: '#f8fafc'
            }}>
              <button
                onClick={() => handleTabChange(formule.id, 'formules')}
                style={{
                  flex: 1,
                  padding: '15px 20px',
                  border: 'none',
                  background: getActiveTab(formule.id) === 'formules' ? '#fff' : 'transparent',
                  color: getActiveTab(formule.id) === 'formules' ? formule.color : '#64748b',
                  fontWeight: getActiveTab(formule.id) === 'formules' ? '600' : '500',
                  fontSize: '14px',
                  cursor: 'pointer',
                  borderBottom: getActiveTab(formule.id) === 'formules' ? `3px solid ${formule.color}` : '3px solid transparent',
                  transition: 'all 0.3s ease',
                  textTransform: 'uppercase',
                  letterSpacing: '0.5px'
                }}
              >
                üìä Formules
              </button>
              <button
                onClick={() => handleTabChange(formule.id, 'methodes')}
                style={{
                  flex: 1,
                  padding: '15px 20px',
                  border: 'none',
                  background: getActiveTab(formule.id) === 'methodes' ? '#fff' : 'transparent',
                  color: getActiveTab(formule.id) === 'methodes' ? formule.color : '#64748b',
                  fontWeight: getActiveTab(formule.id) === 'methodes' ? '600' : '500',
                  fontSize: '14px',
                  cursor: 'pointer',
                  borderBottom: getActiveTab(formule.id) === 'methodes' ? `3px solid ${formule.color}` : '3px solid transparent',
                  transition: 'all 0.3s ease',
                  textTransform: 'uppercase',
                  letterSpacing: '0.5px'
                }}
              >
                üîß M√©thodes
              </button>
            </div>

            {/* Contenu selon l'onglet actif */}
            <div style={{ padding: '25px 30px 30px 30px', minHeight: '250px' }}>
              {getActiveTab(formule.id) === 'formules' ? (
                <div>
                  <h4 style={{ 
                    fontSize: '16px', 
                    fontWeight: '600', 
                    color: formule.color, 
                    marginBottom: '15px',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px'
                  }}>
                    üìê Propri√©t√©s et Formules
                  </h4>
                  <ul style={{ 
                    paddingLeft: '0', 
                    listStyle: 'none',
                    fontSize: '14px', 
                    lineHeight: '1.8'
                  }}>
                    {formule.properties.map((prop, i) => (
                      <li key={i} style={{ 
                        marginBottom: '12px',
                        padding: '12px 15px',
                        backgroundColor: '#f8fafc',
                        borderRadius: '10px',
                        borderLeft: `4px solid ${formule.color}`
                      }}>
                        <strong style={{ color: formule.color }}>{prop.name} :</strong>
                        <br />
                        <code style={{ 
                          backgroundColor: '#fff', 
                          padding: '4px 8px', 
                          borderRadius: '5px',
                          fontSize: '13px',
                          color: '#334155',
                          marginTop: '5px',
                          display: 'inline-block'
                        }}>
                          {prop.example}
                        </code>
                      </li>
                    ))}
                  </ul>
                </div>
              ) : (
                <div>
                  <h4 style={{ 
                    fontSize: '16px', 
                    fontWeight: '600', 
                    color: formule.color, 
                    marginBottom: '15px',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px'
                  }}>
                    üìù M√©thode et √âtapes
                  </h4>
                  <ol style={{ 
                    paddingLeft: '0', 
                    listStyle: 'none',
                    color: '#475569', 
                    fontSize: '14px', 
                    lineHeight: '1.7',
                    counterReset: 'step-counter'
                  }}>
                    {formule.methods.map((method, i) => (
                      <li key={i} style={{ 
                        marginBottom: '15px',
                        padding: '15px 20px',
                        backgroundColor: '#f8fafc',
                        borderRadius: '12px',
                        position: 'relative',
                        paddingLeft: '60px',
                        counterIncrement: 'step-counter'
                      }}>
                        <span style={{
                          position: 'absolute',
                          left: '15px',
                          top: '15px',
                          width: '30px',
                          height: '30px',
                          backgroundColor: formule.color,
                          color: 'white',
                          borderRadius: '50%',
                          display: 'flex',
                          alignItems: 'center',
                          justifyContent: 'center',
                          fontSize: '12px',
                          fontWeight: '700'
                        }}>
                          {i + 1}
                        </span>
                        {method}
                      </li>
                    ))}
                  </ol>
                </div>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
